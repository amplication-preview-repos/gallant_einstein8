/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Shift as PrismaShift } from "@prisma/client";

export class ShiftServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ShiftCountArgs, "select">): Promise<number> {
    return this.prisma.shift.count(args);
  }

  async shifts(args: Prisma.ShiftFindManyArgs): Promise<PrismaShift[]> {
    return this.prisma.shift.findMany(args);
  }
  async shift(args: Prisma.ShiftFindUniqueArgs): Promise<PrismaShift | null> {
    return this.prisma.shift.findUnique(args);
  }
  async createShift(args: Prisma.ShiftCreateArgs): Promise<PrismaShift> {
    return this.prisma.shift.create(args);
  }
  async updateShift(args: Prisma.ShiftUpdateArgs): Promise<PrismaShift> {
    return this.prisma.shift.update(args);
  }
  async deleteShift(args: Prisma.ShiftDeleteArgs): Promise<PrismaShift> {
    return this.prisma.shift.delete(args);
  }
}
